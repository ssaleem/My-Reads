{"version":3,"sources":["utils/BooksAPI.js","components/Book.js","components/SearchBooks.js","components/Bookshelf.js","components/ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","books","Book","shelf","this","props","onUpdateBook","book","_this","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","handleChange","target","disabled","title","authors","join","Component","SearchBooks","state","onUpdateQuery","setState","bookList","length","BooksAPI","bookResults","filter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","index","findIndex","bookEntry","id","_iterator","Symbol","iterator","next","done","err","return","catch","e","_this2","Link","to","type","placeholder","map","key","components_Book","Bookshelf","_this$props","bookshelfTitle","ListBooks","currentlyReading","wantToRead","read","components_Bookshelf","BooksApp","newShelf","_this3","prevState","_this4","Route","exact","path","render","components_ListBooks","updateBook","components_SearchBooks","React","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9243b99.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\n\nclass Book extends Component {\n\n\thandleChange(shelf){\n\t\tthis.props.onUpdateBook(this.props.book, shelf)\n\t}\n\n\trender() {\n\t\tconst book = this.props.book\n\t\treturn (\n\t\t\t<div className=\"book\">\n\t\t\t\t<div className=\"book-top\">\n\t\t\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\n\t\t\t\t\t<div className=\"book-shelf-changer\">\n\t\t\t\t\t\t<select value={book.shelf} onChange={event => this.handleChange(event.target.value)}>\n\t\t\t\t\t\t<option value=\"move\" disabled>Move to...</option>\n\t\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t\t\t<option value=\"none\">None</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"book-title\">{book.title}</div>\n\t\t\t\t<div className=\"book-authors\">{book.authors.join(' , ')}</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Book","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport * as BooksAPI from '../utils/BooksAPI'\nimport Book from './Book'\n\nclass SearchBooks extends Component {\n\n\tstatic propTypes = {\n\t    bookList: PropTypes.array.isRequired,\n\t    onUpdateBook: PropTypes.func.isRequired\n    }\n\n\tstate = {\n\t\tquery: '',\n\t\tbooks: []\n\t}\n\n\tonUpdateQuery = (query) => {\n\t\tthis.setState({ query: query})\n\t\tlet bookList = this.props.bookList\n\t\tquery.length >= 1 ? (\n\t\t\tBooksAPI.search(query).then(\n\t\t\t\tbookResults => {\n\t\t\t\t\t// console.log(query)\n\t\t\t\t\t// console.log(bookResults)\n\t\t\t\t\tbookResults = bookResults.filter((book) => typeof(book.imageLinks) !== \"undefined\" && typeof(book.authors) !== \"undefined\" )\n\t\t\t\t\tfor(const book of bookResults) {\n\t\t\t\t\t\tlet index = bookList.findIndex(bookEntry => bookEntry.id === book.id)\n\t\t\t\t\t\tif( index !== -1 ){\n\t\t\t\t\t\t\tbook.shelf = bookList[index].shelf\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbook.shelf = \"none\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({ books: bookResults })\n\t\t\t\t}\n\t\t\t).catch((e) => {\n\t\t\t\tthis.setState({ books: [] })\n\t\t\t\t// console.log(e)\n\t\t\t})\n\t\t) : (this.setState({ books: [] }))\n\n\t}\n\n\trender(){\n\t\tconst onUpdateBook = this.props.onUpdateBook\n\t\treturn (\n\t\t\t<div className=\"search-books\">\n\t\t\t\t<div className=\"search-books-bar\">\n\t\t\t\t\t<Link className=\"close-search\" to='/'>Close</Link>\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search by title or author\"\n\t\t\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\t\t\tonChange={event => this.onUpdateQuery(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-books-results\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t\t{this.state.books && (this.state.books.map((book) => (\n\t\t\t\t\t\t\t<li key={book.id}>\n\t\t\t\t\t\t\t\t<Book book={book} onUpdateBook={onUpdateBook}/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)))}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n\nexport default SearchBooks","import React, { Component } from 'react';\nimport Book from './Book'\n\nclass Bookshelf extends Component {\n\trender() {\n\t\tconst { bookshelfTitle, books, onUpdateBook} = this.props\n\t\treturn (\n\t\t\t<div className=\"bookshelf\">\n\t\t\t\t<h2 className=\"bookshelf-title\">{bookshelfTitle}</h2>\n\t\t\t\t<div className=\"bookshelf-books\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t\t{books.map((book) => (\n\t\t\t\t\t\t\t<li key={book.id}>\n\t\t\t\t\t\t\t\t<Book book={book} onUpdateBook={onUpdateBook} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Bookshelf","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Bookshelf from './Bookshelf'\n\nclass ListBooks extends Component {\n\tstatic propTypes = {\n\t    books: PropTypes.array.isRequired,\n\t    onUpdateBook: PropTypes.func.isRequired\n    }\n\n\trender (){\n\t\tconst { books, onUpdateBook } = this.props\n\n\t\tlet currentlyReading = (books.filter(book => book.shelf === \"currentlyReading\"))\n        let wantToRead = (books.filter(book => book.shelf === \"wantToRead\"))\n        let read = (books.filter(book => book.shelf === \"read\"))\n\n\t\treturn (\n\t\t\t<div className=\"list-books\">\n\t            <div className=\"list-books-title\">\n\t              <h1>MyReads</h1>\n\t            </div>\n\t            <div className=\"list-books-content\">\n\t              <div>\n\t                <Bookshelf bookshelfTitle=\"Currently Reading\" books={currentlyReading} onUpdateBook={onUpdateBook}/>\n\t                <Bookshelf bookshelfTitle=\"Want to Read\" books={wantToRead} onUpdateBook={onUpdateBook}/>\n\t                <Bookshelf bookshelfTitle=\"Read\" books={read} onUpdateBook={onUpdateBook}/>\n\t              </div>\n\t            </div>\n\t            <div className=\"open-search\">\n\t              <Link to='/search'>Add a book</Link>\n\t            </div>\n            </div>\n\t\t)\n\t}\n}\n\nexport default ListBooks","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport * as BooksAPI from './utils/BooksAPI'\nimport SearchBooks from './components/SearchBooks'\nimport ListBooks from './components/ListBooks'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books: books })\n    })\n  }\n\n  updateBook(book, newShelf) {\n    // console.log(book)\n    BooksAPI.update(book, newShelf).then( () => {\n      this.setState(prevState => {\n        let index = prevState.books.findIndex(bookEntry => bookEntry.id === book.id)\n        // console.log(index)\n        if(index !== -1) {\n          prevState.books[index].shelf = newShelf\n        }\n        else {\n          book.shelf = newShelf\n          prevState.books = prevState.books.concat(book)\n        }\n        return { state: prevState}\n      })\n    }\n    )\n  }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n          <Route exact path='/' render={() => (\n          <ListBooks\n            books={this.state.books}\n            onUpdateBook={(book, newShelf) => this.updateBook(book, newShelf)}\n          />\n        )}/>\n          <Route path=\"/search\" render={() => (\n            <SearchBooks\n            bookList={this.state.books}\n            onUpdateBook={(book, newShelf) => this.updateBook(book, newShelf)}/>\n          )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}